{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Geobay","text":"<p>python package for geog 510</p> <ul> <li>Free software: MIT License</li> <li>Documentation: https://Caseyshea96.github.io/GeoBay</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>TODO</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v001-date","title":"v0.0.1 - Date","text":"<p>Improvement:</p> <ul> <li>TBD</li> </ul> <p>New Features:</p> <ul> <li>TBD</li> </ul>"},{"location":"common/","title":"common module","text":"<p>```{python} import geobay</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/Caseyshea96/geoproject510/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>GeoProject510 could always use more documentation, whether as part of the official GeoProject510 docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/Caseyshea96/geoproject510/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up geoproject510 for local development.</p> <ol> <li> <p>Fork the geoproject510 repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/geoproject510.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv geoproject510\n$ cd geoproject510/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 geoproject510 tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.8 and later, and     for PyPy. Check https://github.com/Caseyshea96/geoproject510/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"faq/","title":"FAQ","text":""},{"location":"foliumap/","title":"foliumap module","text":""},{"location":"foliumap/#GeoBay.foliumap.FoliumMap","title":"<code>FoliumMap</code>","text":"Source code in <code>GeoBay\\foliumap.py</code> <pre><code>class FoliumMap:\n    def __init__(self, location, zoom_start=3, **kwargs):\n        \"\"\"\n        Initializes a folium map centered at a given location with a specified zoom level.\n\n        Parameters:\n        location (tuple): Latitude and longitude coordinates for the map center.\n        zoom_start (int): The initial zoom level of the map.\n        \"\"\"\n        self.map = folium.Map(location=location, zoom_start=zoom_start, **kwargs)\n\n    def add_basemap(self, basemap='OpenStreetMap'):\n        \"\"\"\n        Adds a basemap to the folium map.\n\n        Parameters:\n        basemap (str): The name of the basemap to add (e.g., 'OpenStreetMap', 'Stamen Terrain', etc.).\n        \"\"\"\n        basemaps = {\n            'OpenStreetMap': 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n            'Stamen Terrain': 'http://{s}.tile.stamen.com/terrain/{z}/{x}/{y}.jpg',\n            'Esri WorldImagery': 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n        }\n        folium.TileLayer(tiles=basemaps.get(basemap, basemaps['OpenStreetMap']), attr=basemap).add_to(self.map)\n\n    def add_layer_control(self):\n        \"\"\"\n        Adds a layer control widget to the folium map for toggling layers.\n        \"\"\"\n        folium.LayerControl().add_to(self.map)\n\n    def add_vector(self, geo_data):\n        \"\"\"\n        Adds vector data (GeoJSON or other formats supported by GeoPandas) to the map.\n\n        Parameters:\n        geo_data (GeoDataFrame or str): A GeoDataFrame or a path to a GeoJSON file.\n        \"\"\"\n        if isinstance(geo_data, gpd.GeoDataFrame):\n            geo_data = geo_data.to_json()\n        folium.GeoJson(geo_data).add_to(self.map)\n\n    def add_split_map(self, left_layer='OpenStreetMap', right_layer='Stamen Terrain'):\n        \"\"\"\n        Adds a side-by-side split view of two different tile layers.\n\n        Parameters:\n        left_layer (str): Basemap name for the left side.\n        right_layer (str): Basemap name for the right side.\n        \"\"\"\n        # Define the basemap options\n        basemaps = {\n            'OpenStreetMap': folium.TileLayer(\n                tiles='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n                name='OpenStreetMap', attr='OpenStreetMap'\n            ),\n            'Stamen Terrain': folium.TileLayer(\n                tiles='http://{s}.tile.stamen.com/terrain/{z}/{x}/{y}.jpg',\n                name='Stamen Terrain', attr='Stamen Terrain'\n            ),\n            'Esri WorldImagery': folium.TileLayer(\n                tiles='http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n                name='Esri WorldImagery', attr='Esri WorldImagery'\n            )\n        }\n\n        # Get the left and right basemaps\n        left = basemaps.get(left_layer, basemaps['OpenStreetMap'])\n        right = basemaps.get(right_layer, basemaps['Stamen Terrain'])\n\n        # Add the layers to the map\n        left.add_to(self.map)\n        right.add_to(self.map)\n\n        # Add the side-by-side split functionality\n        side_by_side = SideBySideLayers(left, right)\n        side_by_side.add_to(self.map)\n\n    def show_map(self):\n        \"\"\"\n        Displays the folium map in the Jupyter notebook or Python script.\n        \"\"\"\n        return self.map\n</code></pre>"},{"location":"foliumap/#GeoBay.foliumap.FoliumMap.__init__","title":"<code>__init__(location, zoom_start=3, **kwargs)</code>","text":"<p>Initializes a folium map centered at a given location with a specified zoom level.</p> <p>Parameters: location (tuple): Latitude and longitude coordinates for the map center. zoom_start (int): The initial zoom level of the map.</p> Source code in <code>GeoBay\\foliumap.py</code> <pre><code>def __init__(self, location, zoom_start=3, **kwargs):\n    \"\"\"\n    Initializes a folium map centered at a given location with a specified zoom level.\n\n    Parameters:\n    location (tuple): Latitude and longitude coordinates for the map center.\n    zoom_start (int): The initial zoom level of the map.\n    \"\"\"\n    self.map = folium.Map(location=location, zoom_start=zoom_start, **kwargs)\n</code></pre>"},{"location":"foliumap/#GeoBay.foliumap.FoliumMap.add_basemap","title":"<code>add_basemap(basemap='OpenStreetMap')</code>","text":"<p>Adds a basemap to the folium map.</p> <p>Parameters: basemap (str): The name of the basemap to add (e.g., 'OpenStreetMap', 'Stamen Terrain', etc.).</p> Source code in <code>GeoBay\\foliumap.py</code> <pre><code>def add_basemap(self, basemap='OpenStreetMap'):\n    \"\"\"\n    Adds a basemap to the folium map.\n\n    Parameters:\n    basemap (str): The name of the basemap to add (e.g., 'OpenStreetMap', 'Stamen Terrain', etc.).\n    \"\"\"\n    basemaps = {\n        'OpenStreetMap': 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        'Stamen Terrain': 'http://{s}.tile.stamen.com/terrain/{z}/{x}/{y}.jpg',\n        'Esri WorldImagery': 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n    }\n    folium.TileLayer(tiles=basemaps.get(basemap, basemaps['OpenStreetMap']), attr=basemap).add_to(self.map)\n</code></pre>"},{"location":"foliumap/#GeoBay.foliumap.FoliumMap.add_layer_control","title":"<code>add_layer_control()</code>","text":"<p>Adds a layer control widget to the folium map for toggling layers.</p> Source code in <code>GeoBay\\foliumap.py</code> <pre><code>def add_layer_control(self):\n    \"\"\"\n    Adds a layer control widget to the folium map for toggling layers.\n    \"\"\"\n    folium.LayerControl().add_to(self.map)\n</code></pre>"},{"location":"foliumap/#GeoBay.foliumap.FoliumMap.add_split_map","title":"<code>add_split_map(left_layer='OpenStreetMap', right_layer='Stamen Terrain')</code>","text":"<p>Adds a side-by-side split view of two different tile layers.</p> <p>Parameters: left_layer (str): Basemap name for the left side. right_layer (str): Basemap name for the right side.</p> Source code in <code>GeoBay\\foliumap.py</code> <pre><code>def add_split_map(self, left_layer='OpenStreetMap', right_layer='Stamen Terrain'):\n    \"\"\"\n    Adds a side-by-side split view of two different tile layers.\n\n    Parameters:\n    left_layer (str): Basemap name for the left side.\n    right_layer (str): Basemap name for the right side.\n    \"\"\"\n    # Define the basemap options\n    basemaps = {\n        'OpenStreetMap': folium.TileLayer(\n            tiles='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n            name='OpenStreetMap', attr='OpenStreetMap'\n        ),\n        'Stamen Terrain': folium.TileLayer(\n            tiles='http://{s}.tile.stamen.com/terrain/{z}/{x}/{y}.jpg',\n            name='Stamen Terrain', attr='Stamen Terrain'\n        ),\n        'Esri WorldImagery': folium.TileLayer(\n            tiles='http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n            name='Esri WorldImagery', attr='Esri WorldImagery'\n        )\n    }\n\n    # Get the left and right basemaps\n    left = basemaps.get(left_layer, basemaps['OpenStreetMap'])\n    right = basemaps.get(right_layer, basemaps['Stamen Terrain'])\n\n    # Add the layers to the map\n    left.add_to(self.map)\n    right.add_to(self.map)\n\n    # Add the side-by-side split functionality\n    side_by_side = SideBySideLayers(left, right)\n    side_by_side.add_to(self.map)\n</code></pre>"},{"location":"foliumap/#GeoBay.foliumap.FoliumMap.add_vector","title":"<code>add_vector(geo_data)</code>","text":"<p>Adds vector data (GeoJSON or other formats supported by GeoPandas) to the map.</p> <p>Parameters: geo_data (GeoDataFrame or str): A GeoDataFrame or a path to a GeoJSON file.</p> Source code in <code>GeoBay\\foliumap.py</code> <pre><code>def add_vector(self, geo_data):\n    \"\"\"\n    Adds vector data (GeoJSON or other formats supported by GeoPandas) to the map.\n\n    Parameters:\n    geo_data (GeoDataFrame or str): A GeoDataFrame or a path to a GeoJSON file.\n    \"\"\"\n    if isinstance(geo_data, gpd.GeoDataFrame):\n        geo_data = geo_data.to_json()\n    folium.GeoJson(geo_data).add_to(self.map)\n</code></pre>"},{"location":"foliumap/#GeoBay.foliumap.FoliumMap.show_map","title":"<code>show_map()</code>","text":"<p>Displays the folium map in the Jupyter notebook or Python script.</p> Source code in <code>GeoBay\\foliumap.py</code> <pre><code>def show_map(self):\n    \"\"\"\n    Displays the folium map in the Jupyter notebook or Python script.\n    \"\"\"\n    return self.map\n</code></pre>"},{"location":"geobay/","title":"GeoBay module","text":""},{"location":"geobay/#GeoBay.GeoBay.CustomIpyleafletMap","title":"<code>CustomIpyleafletMap</code>","text":"<p>               Bases: <code>Map</code></p> Source code in <code>GeoBay\\GeoBay.py</code> <pre><code>class CustomIpyleafletMap(IpyleafletMap):\n    def __init__(self, center, zoom=12, **kwargs):\n        super().__init__(center=center, zoom=zoom, **kwargs)\n\n    def add_basemap(self, basemap_name: str):\n        basemap_urls = {\n            \"OpenStreetMap\": \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            \"Esri.WorldImagery\": \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n            \"OpenTopoMap\": \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n        }\n\n        if basemap_name not in basemap_urls:\n            raise ValueError(f\"Basemap '{basemap_name}' is not supported.\")\n\n        basemap = TileLayer(url=basemap_urls[basemap_name])\n        self.add_layer(basemap)\n\n    def add_layer_control(self):\n        control = LayersControl()\n        self.add_control(control)\n\n    def add_vector(self, vector_data):\n        if isinstance(vector_data, str):\n            gdf = gpd.read_file(vector_data)\n        elif isinstance(vector_data, gpd.GeoDataFrame):\n            gdf = vector_data\n        else:\n            raise ValueError(\"Input must be a file path or a GeoDataFrame.\")\n\n        geo_json_data = gdf.__geo_interface__\n        geo_json_layer = GeoJSON(data=geo_json_data)\n        self.add_layer(geo_json_layer)\n\n    def add_raster(self, url, name=None, colormap=None, opacity=1.0):\n        tile_layer = TileLayer(\n            url=url,\n            name=name or \"Raster Layer\",\n            opacity=opacity\n        )\n        self.add_layer(tile_layer)\n\n    def add_image(self, url, bounds, opacity=1.0):\n        image_layer = ImageOverlay(\n            url=url,\n            bounds=bounds,\n            opacity=opacity\n        )\n        self.add_layer(image_layer)\n\n    def add_video(self, url, bounds, opacity=1.0):\n        video_layer = VideoOverlay(\n            url=url,\n            bounds=bounds,\n            opacity=opacity\n        )\n        self.add_layer(video_layer)\n\n    def add_wms_layer(self, url, layers, name=None, format='image/png', transparent=True, **extra_params):\n        wms_layer = WMSLayer(\n            url=url,\n            layers=layers,\n            name=name or \"WMS Layer\",\n            format=format,\n            transparent=transparent,\n            **extra_params\n        )\n        self.add_layer(wms_layer)\n\n    def show_map(self):\n        return self\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install Geobay, run this command in your terminal:</p> <pre><code>pip install geobay\n</code></pre> <p>This is the preferred method to install Geobay, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>To install Geobay from sources, run this command in your terminal:</p> <pre><code>pip install git+https://github.com/Caseyshea96/geobay\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use Geobay in a project:</p> <pre><code>import geobay\n</code></pre>"},{"location":"examples/Lab7_Methods_Sample/","title":"Lab7 Methods Sample","text":"In\u00a0[1]: Copied! <pre>pip install --upgrade geobay\n</pre> pip install --upgrade geobay  <pre>Requirement already satisfied: geobay in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (0.0.27)\nRequirement already satisfied: numpy in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (2.2.4)\nRequirement already satisfied: ipyleaflet&gt;=0.17.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (0.19.2)\nRequirement already satisfied: geopandas&gt;=0.10.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (1.0.1)\nRequirement already satisfied: pyogrio&gt;=0.7.2 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (0.10.0)\nRequirement already satisfied: packaging in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (24.2)\nRequirement already satisfied: pandas&gt;=1.4.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (2.2.3)\nRequirement already satisfied: pyproj&gt;=3.3.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (3.7.1)\nRequirement already satisfied: shapely&gt;=2.0.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (2.0.7)\nRequirement already satisfied: branca&gt;=0.5.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.8.1)\nRequirement already satisfied: ipywidgets&lt;9,&gt;=7.6.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (8.1.5)\nRequirement already satisfied: jupyter-leaflet&lt;0.20,&gt;=0.19 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.19.2)\nRequirement already satisfied: traittypes&lt;3,&gt;=0.2.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.1)\nRequirement already satisfied: xyzservices&gt;=2021.8.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (2025.1.0)\nRequirement already satisfied: jinja2&gt;=3 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from branca&gt;=0.5.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.1.6)\nRequirement already satisfied: comm&gt;=0.1.3 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.2)\nRequirement already satisfied: ipython&gt;=6.1.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (9.0.2)\nRequirement already satisfied: traitlets&gt;=4.3.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (5.14.3)\nRequirement already satisfied: widgetsnbextension~=4.0.12 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (4.0.13)\nRequirement already satisfied: jupyterlab-widgets~=3.0.12 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.13)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.2)\nRequirement already satisfied: certifi in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pyogrio&gt;=0.7.2-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.1.31)\nRequirement already satisfied: colorama in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.4.6)\nRequirement already satisfied: decorator in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (5.2.1)\nRequirement already satisfied: ipython-pygments-lexers in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (1.1.1)\nRequirement already satisfied: jedi&gt;=0.16 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.19.2)\nRequirement already satisfied: matplotlib-inline in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.1.7)\nRequirement already satisfied: prompt_toolkit&lt;3.1.0,&gt;=3.0.41 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.50)\nRequirement already satisfied: pygments&gt;=2.4.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (2.19.1)\nRequirement already satisfied: stack_data in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.6.3)\nRequirement already satisfied: typing_extensions&gt;=4.6 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (4.13.0)\nRequirement already satisfied: MarkupSafe&gt;=2.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from jinja2&gt;=3-&gt;branca&gt;=0.5.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.2)\nRequirement already satisfied: six&gt;=1.5 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (1.17.0)\nRequirement already satisfied: parso&lt;0.9.0,&gt;=0.8.4 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from jedi&gt;=0.16-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.8.4)\nRequirement already satisfied: wcwidth in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from prompt_toolkit&lt;3.1.0,&gt;=3.0.41-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.13)\nRequirement already satisfied: executing&gt;=1.2.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (2.2.0)\nRequirement already satisfied: asttokens&gt;=2.1.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.0)\nRequirement already satisfied: pure-eval in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.3)\nNote: you may need to restart the kernel to use updated packages.\n</pre> In\u00a0[2]: Copied! <pre>from GeoBay import CustomIpyleafletMap\nfrom ipyleaflet import DrawControl\n</pre> from GeoBay import CustomIpyleafletMap from ipyleaflet import DrawControl In\u00a0[3]: Copied! <pre># Create the map centered on a location (NYC)\nmymap = CustomIpyleafletMap(center=[40.6892, -74.0445], zoom=9)\nmymap.add_basemap(\"Esri.WorldImagery\")\nmymap.add_layer_control()\n\n#Loading a GeoJSON vector layer\nimport geopandas as gpd\nvector_url = \"https://github.com/opengeos/datasets/releases/download/places/nyc_roads.geojson\"\ngdf = gpd.read_file(vector_url)\ngdf = gdf.to_crs(epsg=4326)  # Ensure the CRS is WGS84 for web mapping\nmymap.add_vector(gdf)\n\n# Sample tile layer from USGS\nurl = \"https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}\"\nmymap.add_raster(url, name=\"USGS Topo\", opacity=0.6)\n\n# Sample image URL and bounds\nimage_url = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSUXq-znfyXENLtD64Ijh3gB-psZGO7WlY3vg&amp;s\"\nbounds = [(41.1485466,-73.1655751), (40.8967207,-73.5636963)]\nmymap.add_image(image_url, bounds, opacity=1)\n\nvideo_url = \"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExa2R3ZXEzbmp0NGVrdHN3bTlxOXpuc3Q5cHZtaHE2NTF2enVnNmlseiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l0ExmnWtg74l7oqkM/giphy.gif\"\nbounds = [(41.0165271, -74.1999349), (40.7450505, -74.6063112)]\nmymap.add_video(video_url, bounds, opacity=1)\nmymap\n</pre> # Create the map centered on a location (NYC) mymap = CustomIpyleafletMap(center=[40.6892, -74.0445], zoom=9) mymap.add_basemap(\"Esri.WorldImagery\") mymap.add_layer_control()  #Loading a GeoJSON vector layer import geopandas as gpd vector_url = \"https://github.com/opengeos/datasets/releases/download/places/nyc_roads.geojson\" gdf = gpd.read_file(vector_url) gdf = gdf.to_crs(epsg=4326)  # Ensure the CRS is WGS84 for web mapping mymap.add_vector(gdf)  # Sample tile layer from USGS url = \"https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}\" mymap.add_raster(url, name=\"USGS Topo\", opacity=0.6)  # Sample image URL and bounds image_url = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSUXq-znfyXENLtD64Ijh3gB-psZGO7WlY3vg&amp;s\" bounds = [(41.1485466,-73.1655751), (40.8967207,-73.5636963)] mymap.add_image(image_url, bounds, opacity=1)  video_url = \"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExa2R3ZXEzbmp0NGVrdHN3bTlxOXpuc3Q5cHZtaHE2NTF2enVnNmlseiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l0ExmnWtg74l7oqkM/giphy.gif\" bounds = [(41.0165271, -74.1999349), (40.7450505, -74.6063112)] mymap.add_video(video_url, bounds, opacity=1) mymap Out[3]:"},{"location":"examples/SplitMap_demo/","title":"SplitMap demo","text":"In\u00a0[1]: Copied! <pre>pip install --upgrade geobay\n</pre> pip install --upgrade geobay <pre>Requirement already satisfied: geobay in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (0.0.27)\nRequirement already satisfied: numpy in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (2.2.4)\nRequirement already satisfied: ipyleaflet&gt;=0.17.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (0.19.2)\nRequirement already satisfied: geopandas&gt;=0.10.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (1.0.1)\nRequirement already satisfied: pyogrio&gt;=0.7.2 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (0.10.0)\nRequirement already satisfied: packaging in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (24.2)\nRequirement already satisfied: pandas&gt;=1.4.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (2.2.3)\nRequirement already satisfied: pyproj&gt;=3.3.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (3.7.1)\nRequirement already satisfied: shapely&gt;=2.0.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (2.0.7)\nRequirement already satisfied: branca&gt;=0.5.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.8.1)\nRequirement already satisfied: ipywidgets&lt;9,&gt;=7.6.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (8.1.5)\nRequirement already satisfied: jupyter-leaflet&lt;0.20,&gt;=0.19 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.19.2)\nRequirement already satisfied: traittypes&lt;3,&gt;=0.2.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.1)\nRequirement already satisfied: xyzservices&gt;=2021.8.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (2025.1.0)\nRequirement already satisfied: jinja2&gt;=3 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from branca&gt;=0.5.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.1.6)\nRequirement already satisfied: comm&gt;=0.1.3 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.2)\nRequirement already satisfied: ipython&gt;=6.1.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (9.0.2)\nRequirement already satisfied: traitlets&gt;=4.3.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (5.14.3)\nRequirement already satisfied: widgetsnbextension~=4.0.12 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (4.0.13)\nRequirement already satisfied: jupyterlab-widgets~=3.0.12 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.13)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.2)\nRequirement already satisfied: certifi in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pyogrio&gt;=0.7.2-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.1.31)\nRequirement already satisfied: colorama in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.4.6)\nRequirement already satisfied: decorator in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (5.2.1)\nRequirement already satisfied: ipython-pygments-lexers in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (1.1.1)\nRequirement already satisfied: jedi&gt;=0.16 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.19.2)\nRequirement already satisfied: matplotlib-inline in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.1.7)\nRequirement already satisfied: prompt_toolkit&lt;3.1.0,&gt;=3.0.41 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.50)\nRequirement already satisfied: pygments&gt;=2.4.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (2.19.1)\nRequirement already satisfied: stack_data in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.6.3)\nRequirement already satisfied: typing_extensions&gt;=4.6 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (4.13.0)\nRequirement already satisfied: MarkupSafe&gt;=2.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from jinja2&gt;=3-&gt;branca&gt;=0.5.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.2)\nRequirement already satisfied: six&gt;=1.5 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (1.17.0)\nRequirement already satisfied: parso&lt;0.9.0,&gt;=0.8.4 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from jedi&gt;=0.16-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.8.4)\nRequirement already satisfied: wcwidth in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from prompt_toolkit&lt;3.1.0,&gt;=3.0.41-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.13)\nRequirement already satisfied: executing&gt;=1.2.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (2.2.0)\nRequirement already satisfied: asttokens&gt;=2.1.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.0)\nRequirement already satisfied: pure-eval in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.3)\nNote: you may need to restart the kernel to use updated packages.\n</pre> In\u00a0[2]: Copied! <pre>from GeoBay.foliumap import FoliumMap  # If using as a module\n\n# Initialize the map\nmy_map = FoliumMap(location=(38.5, -98.0), zoom_start=5)\n\n# Add split map functionality\nmy_map.add_split_map('OpenStreetMap', 'Esri WorldImagery')\n\n# Optional: Add layer control\nmy_map.add_layer_control()\n\n# Show the map\nmy_map.show_map()\n</pre> from GeoBay.foliumap import FoliumMap  # If using as a module  # Initialize the map my_map = FoliumMap(location=(38.5, -98.0), zoom_start=5)  # Add split map functionality my_map.add_split_map('OpenStreetMap', 'Esri WorldImagery')  # Optional: Add layer control my_map.add_layer_control()  # Show the map my_map.show_map()   Out[2]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"examples/example/","title":"Example","text":"<p>Example Notebook</p> <p></p> In\u00a0[1]: Copied! <pre>pip install geobay\n</pre> pip install geobay <pre>Requirement already satisfied: geobay in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (0.0.27)\nRequirement already satisfied: numpy in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (2.2.4)\nRequirement already satisfied: ipyleaflet&gt;=0.17.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (0.19.2)\nRequirement already satisfied: geopandas&gt;=0.10.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geobay) (1.0.1)\nRequirement already satisfied: pyogrio&gt;=0.7.2 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (0.10.0)\nRequirement already satisfied: packaging in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (24.2)\nRequirement already satisfied: pandas&gt;=1.4.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (2.2.3)\nRequirement already satisfied: pyproj&gt;=3.3.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (3.7.1)\nRequirement already satisfied: shapely&gt;=2.0.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from geopandas&gt;=0.10.0-&gt;geobay) (2.0.7)\nRequirement already satisfied: branca&gt;=0.5.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.8.1)\nRequirement already satisfied: ipywidgets&lt;9,&gt;=7.6.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (8.1.5)\nRequirement already satisfied: jupyter-leaflet&lt;0.20,&gt;=0.19 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.19.2)\nRequirement already satisfied: traittypes&lt;3,&gt;=0.2.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.1)\nRequirement already satisfied: xyzservices&gt;=2021.8.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipyleaflet&gt;=0.17.0-&gt;geobay) (2025.1.0)\nRequirement already satisfied: jinja2&gt;=3 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from branca&gt;=0.5.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.1.6)\nRequirement already satisfied: comm&gt;=0.1.3 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.2)\nRequirement already satisfied: ipython&gt;=6.1.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (9.0.2)\nRequirement already satisfied: traitlets&gt;=4.3.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (5.14.3)\nRequirement already satisfied: widgetsnbextension~=4.0.12 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (4.0.13)\nRequirement already satisfied: jupyterlab-widgets~=3.0.12 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.13)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.2)\nRequirement already satisfied: certifi in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from pyogrio&gt;=0.7.2-&gt;geopandas&gt;=0.10.0-&gt;geobay) (2025.1.31)\nRequirement already satisfied: colorama in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.4.6)\nRequirement already satisfied: decorator in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (5.2.1)\nRequirement already satisfied: ipython-pygments-lexers in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (1.1.1)\nRequirement already satisfied: jedi&gt;=0.16 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.19.2)\nRequirement already satisfied: matplotlib-inline in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.1.7)\nRequirement already satisfied: prompt_toolkit&lt;3.1.0,&gt;=3.0.41 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.50)\nRequirement already satisfied: pygments&gt;=2.4.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (2.19.1)\nRequirement already satisfied: stack_data in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.6.3)\nRequirement already satisfied: typing_extensions&gt;=4.6 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (4.13.0)\nRequirement already satisfied: MarkupSafe&gt;=2.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from jinja2&gt;=3-&gt;branca&gt;=0.5.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.2)\nRequirement already satisfied: six&gt;=1.5 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas&gt;=1.4.0-&gt;geopandas&gt;=0.10.0-&gt;geobay) (1.17.0)\nRequirement already satisfied: parso&lt;0.9.0,&gt;=0.8.4 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from jedi&gt;=0.16-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.8.4)\nRequirement already satisfied: wcwidth in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from prompt_toolkit&lt;3.1.0,&gt;=3.0.41-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.13)\nRequirement already satisfied: executing&gt;=1.2.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (2.2.0)\nRequirement already satisfied: asttokens&gt;=2.1.0 in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (3.0.0)\nRequirement already satisfied: pure-eval in c:\\users\\shea9\\documents\\github\\geo\\lib\\site-packages (from stack_data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet&gt;=0.17.0-&gt;geobay) (0.2.3)\nNote: you may need to restart the kernel to use updated packages.\n</pre> In\u00a0[2]: Copied! <pre>from GeoBay.GeoBay import CustomIpyleafletMap as ipyleaflet_Map\n\n# Create an ipyleaflet map instance\nmap_ipyleaflet = ipyleaflet_Map(center=[37.7749, -122.4194], zoom=4)\n\n# Add basemap\nmap_ipyleaflet.add_basemap(\"OpenStreetMap\")\n\n# Add vector data (GeoJSON URL)\nGeodata = \"https://raw.githubusercontent.com/opengeos/data/bb132f1b4f8b9219c0d159216bfc33d05fca915c/vector/cables.geojson\"\nmap_ipyleaflet.add_vector(Geodata)\n\n# Show the map\nmap_ipyleaflet.show_map()\n</pre> from GeoBay.GeoBay import CustomIpyleafletMap as ipyleaflet_Map  # Create an ipyleaflet map instance map_ipyleaflet = ipyleaflet_Map(center=[37.7749, -122.4194], zoom=4)  # Add basemap map_ipyleaflet.add_basemap(\"OpenStreetMap\")  # Add vector data (GeoJSON URL) Geodata = \"https://raw.githubusercontent.com/opengeos/data/bb132f1b4f8b9219c0d159216bfc33d05fca915c/vector/cables.geojson\" map_ipyleaflet.add_vector(Geodata)  # Show the map map_ipyleaflet.show_map() <pre>Skipping field coordinates: unsupported OGR type: 3\n</pre> Out[2]: In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"examples/intro/","title":"Intro","text":"In\u00a0[1]: Copied! <pre>print(\"Hello World!\")\n</pre> print(\"Hello World!\") <pre>Hello World!\n</pre>"}]}